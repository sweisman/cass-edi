\                                                12:39 01-04-91
\ THIS FILE HAS TEST ROUTINES FOR THE CARLSON
\ CHANNEL PLATE SYSTEM
(



     CCPCTL26.SCR






)

\                                                15:45 12-27-90
HEX
: IMG! ( N INDEX --- ) 2* IMG-BASE ROT >PTR W!L ;
: IMG@ ( INDEX --- )   2* IMG-BASE ROT >PTR @L FFFF AND ;
DECIMAL
: 2^N ( N --- 2^N )
  1 SWAP DUP 0= IF
    DROP
  ELSE
    0 DO 2* LOOP
  THEN
;




\                                                11:30 01-16-91
HEX
: CONNECTED? ( --- ) \ PRINTS STATUS BYTE OF 2415
  BEGIN              \ (CARLSON SYSTEM CHANNEL PLATE BUFFER)
    282 PC@ .
    ?TERMINAL
  UNTIL
  KEY DROP
;
: ACCUM? ( --- ) \ LOOPS UNTIL CARLSON SYS DONE ACCUMULATING
  BEGIN
    282 PC@ ( DUP . ) NOT 2 AND
  UNTIL
;
: CMD-DELAY 1000 0 DO LOOP ;

\                                                15:48 12-27-90
HEX
: CMD ( COMMAND --- ) \ SENDS COMMAND TO 2415
     0 282 PC!    \      OFF
     280  P!    \ PUT DATA ON OUTPUT PORT
  10 282 PC! CMD-DELAY \ TOGGLE PCTL ON
   0 282 PC! ;  \ THEN OFF









\                                                14:36 01-16-91
HEX
: INIT-DMA  ( -- )
  57 D6 PC!                       \ SET UP CHANNEL 7
   3 D4 PC!                       \ ENABLE CHANNEL 7
   0 D8 PC!                       \ CLEAR BYTE FLIP-FLOP
  DMA-BLK @ -1 SHIFT DUP CC PC!    \ A8--A1 TO DMA BASE ADDR LO
  -8 SHIFT CC PC!                 \ A16--A9 TO DMA BASE ADDR HI
  FF CE PC!            \ WORD COUNT LOW TO DMA REG ( 64K WORDS )
  FF CE PC!            \ WORD COUNT HI TO DMA REG  ( FFFF )
  DMA-BLK @ -10 SHIFT 8A PC!        \ A19--A17|0 TO PAGE REG
;
\ THIS ROUTINE USES AT DMA CH#7, ALSO CALLED 16 BIT CH#3 IN THE
\ AT MANUAL.  ALL I/O PORTS ARE CODED FOR THIS CHANNEL
\ THE BASE ADDRESS FORMAT IS IN THE AT TECH. REF. MANUAL AND IS
\ SLIGHTLY UNUSUAL-IT MUST BE SPLIT BET PAGE & DMA REGISTERS.
\                                                11:37 01-16-91
HEX
: START-DMA-XFER ( --- ) \ STARTS THE DMA OPERATION
  1 282 PC!     \ TURN ON I/O STROBE SIGNAL ON 2415
  1 284 PC! ;   \ ENABLE DMA ON 2415
: END-DMA-XFER ( --- ) \ DISABLES DMA ON 2415
  0 282 PC!
  0 284 PC! ;

: RESET-2415-BUFFER ( --- ) \ RESETS THE 2415
  A CMD 8 282 PC! CMD-DELAY 0 282 PC! ;

: DMA? \ WAITS UNTIL DMA OP IS DONE
  BEGIN
    D0 P@ ( DUP . ) 8 AND
  UNTIL ;
\                                                14:34 01-16-91
\ DMA TRANSFER FOR THE CARLSON SYSTEM WAS DIFFICULT TO FIGURE
\ OUT DUE TO THE DISPARATE NATURE OF THE DOCUMENTATION.  THE
\ PERTINENT REFERENCES ARE THE 2415 AND 2420 MANUALS (BUFFER
\ AND PC INTERFACE) AND HOW THEY ARE CONTROLLED AND USED IN
\ CONJUNCTION WITH DMA.  ALSO, THE EGGBRECHT BOOK ON PC INTER-
\ FACING IS A MUST, BUT MUST BE USED IN CONJUNCTION WITH THE
\ THE AT TECH. REF. MANUAL SINCE THIS IS AN AT COMPATIBLE AND
\ EGGBRECHT IS OSTENSIBLY FOR PC'S. THE INFORMATION PRESENTED
\ ON DMA IS APPLICABLE HERE TOO WITH THE CHANGES NOTED IN THE
\ AT MANUAL.  STUDY WHAT IS DONE CAREFULLY BEFORE CHANGES,
\ SINCE THE DMA ROUTINES WORK AND ARE STABLE!




\                                                08:48 09-22-90
HEX


: SET-ACCUM-TIME ( N --- ) \ N<=32767 IS TIME IN MSEC
  0 CMD  \ FIRST SET TIME TO ZERO
  7FFF AND CMD             \ BIT 15 IS 0, 0-14 IS TIME
;
: SELECT-PAGE-1 ( --- ) \ SELECTS 1ST IMG PAGE
  E000 CMD
;
: SELECT-PAGE-2 ( --- ) \ SELECTS 2ND IMG PAGE
  E010 CMD
;


\                                                11:40 01-16-91
HEX
: START-ACCUM ( --- ) \ STARTS TIMED & UNTIMED ACCUMULATION
  9000 CMD
;
: STOP-ACCUM ( --- ) \ STOPS UNTIMED ACCUM
  8000 CMD
;
: SET-DESTRUCT ( N --- M ) \ SETS DESTRUCTIVE READOUT MODE
  F0FF AND               \ BY RESETTING BIT 11 IN CMD BYTE
;
: SET-NONDESTRUCT ( N --- M ) \ SETS NONDESTRUCTIVE READOUT MODE
  0800 OR                   \ BY SETTING BIT 11 IN CMD BYTE
;
: SET-DESTRUCT-MODE ( N --- M )
  DESTRUCT @ IF SET-DESTRUCT ELSE SET-NONDESTRUCT THEN ;
\                                                11:42 01-16-91
HEX
: CLEAR-CCP
  RESET-2415-BUFFER
  SELECT-PAGE-1
  C000 SET-DESTRUCT CMD \ SET OUTPUT CONFIGURATION
  INIT-DMA START-DMA-XFER DMA?     \ START DMA XFER & WAIT TIL
  END-DMA-XFER            \ DISABLE DMA CHANNEL
  RESET-2415-BUFFER
  SELECT-PAGE-2
  C010 SET-DESTRUCT CMD
  INIT-DMA START-DMA-XFER DMA?     \ START DMA XFER & WAIT TIL
  END-DMA-XFER            \ DISABLE DMA CHANNEL
;
\ THE ONLY WAY TO CLEAR THE BUFFER IS BY DESTRUCTIVELY READING
\ ITS CONTENTS.  THEY MAY THEN BE DISCARDED OR IGNORED
\                                                11:42 01-16-91
HEX
: GET-CCP   ( --- )     \ TRANSFERS IMAGE FROM BUFFER TO MEM
  RESET-2415-BUFFER     \ IN 2 PARTS (128K PER PART)
  SELECT-PAGE-1
  C000 SET-DESTRUCT-MODE CMD \ SET OUTPUT CONFIGURATION
  INIT-DMA START-DMA-XFER DMA?     \ START DMA XFER & WAIT TIL
  END-DMA-XFER            \ DISABLE DMA CHANNEL
  DMA-BASE IMG-BASE 20000 CMOVEL \ MOVE TO IMAGE MEMORY
  RESET-2415-BUFFER              \ 0-1FFFF
  SELECT-PAGE-2
  C010 SET-DESTRUCT-MODE CMD
  INIT-DMA START-DMA-XFER DMA?     \ START DMA XFER & WAIT TIL
  END-DMA-XFER            \ DISABLE DMA CHANNEL
  DMA-BASE IMG-BASE 20000 >PTR 20000 CMOVEL \ MOVE TO IMAGE MEM
;                                           \ 20000-3FFFF
\                                                11:44 01-16-91
DECIMAL
: IMAGE ( --- ) \ CLRS BUFFER, INITS XFER, AND WAITS FOR FINISH
  CLEAR-CCP
  RESET-2415-BUFFER
  ACCUM-TIME @
  SET-ACCUM-TIME
  FALSE DESTRUCT ! \ ALWAYS USE DESTRUCTIVE READ MODE
  START-ACCUM ACCUM?
  GET-CCP
;





\                                                11:47 01-16-91
: MCA-SCALE-DISP ( --- ) \ DISPLAYS COLOR SCALE FOR MCA IMAGE
  0 MCA-BASE ! MCA-SCALE @ ABS 2^N MCA-RANGE !
  16 0 DO
    40 15 I - GOTOXY I FOREGROUND
    MCA-BASE @ 5 .R ." -"
    MCA-BASE @ MCA-RANGE @ + DUP MCA-BASE ! 1- 5 .R
  LOOP
;
\ THE DISPLAY IS CALCULATED BY THE NUMBER OF BITS SHIFTED.
\ 0 BITS MEANS A RANGE OF 1, 1 MEANS RANGE OF 2, THEN 4 ETC.
\ N BITS MEANS EACH PIXEL HAS A RANGE OF 2^N VALUES, SO THIS
\ ROUTINE CALCS 2^N AND THEN LOOPS WITH THAT VAL AS AN INC.



\                                                11:49 01-16-91
: IMG-COUNTS ( --- N ) \ RETURNS CCP COUNTS FROM ENTIRE CCP
  0 262144 0 DO         \
    IMG-BASE I >PTR @L  \ GET VALUE
    DUP 65535 = OVER 0< OR IF DROP 0 THEN
    +
  4 +LOOP
;
\ GETS THE TOTAL NUMBER OF "REAL" COUNTS FROM THE CHANNEL PLATE.
\ SPURIOUS COUNTS ARE NEGATIVE OR 65535 AND ARE DUE TO NOISE OR
\ OTHER FACTORS AND ARE IGNORED.

: FILL-IMG \ FILLS IMAGE MEMORY WITH -1'S
  262144 0 DO -1 IMG-BASE I >PTR !L 4 +LOOP ;
\ USED FOR TESTING PURPOSES ONLY, CAN BE DELETED NOW

\                                                11:52 01-16-91
: AUTO-SCALE ( --- ) \ CALCS SCALE TO USE FOR MCA
  0 262144 0 DO         \
    IMG-BASE I >PTR @L  \ GET VALUE
    DUP 65535 = IF DROP ELSE MAX THEN
  4 +LOOP
  DUP 0<> IF    \ IF MAX-VAL<>0 THEN SCALE-VAL=INT(LOG(MAX)/
    S>F FLOG 2E FLOG F/ 0.5E F+ F>S 4- \ LOG(2)+.5)-4
  THEN
  DUP 0< IF DROP 0 THEN \ IF SCALE<0 THEN SCALE=0
  NEGATE MCA-SCALE ! \ NEGATE FOR SHIFT RIGHT
;
\ GOES THROUGH THE WHOLE IMG, GETS THE HIGHEST NON-NEG AND
\ NON-65535 VAL, THEN GETS THE SCALE SHIFT BY TAKING BASE2 LOG
\ AND ROUNDING TO NEAREST INTEGER.  LOG2(X)=LOG(X)/LOG(2)

\                                                11:53 01-16-91
:  DRAW-CIRCLE-BORDER  ( --- )
  15 FOREGROUND 128 128 128 0 CIRCLE
;
: DRAW-ANNULUS-BORDERS ( --- ) \ DISPLAYS CTR-ANNULUS OF IMAGE
XOR-ON
  128       \  INNER  BORDER   \ X-CENTER OF CIRCLE
  ANODE-OFFSET MM-PIX F* F>S -1 *  \ Y-CENTER
  RC-INNER F@ MM-PIX F* F>S DUP \ X-RADIUS AND Y-RADIUS
  14 241 0 255  ARC   \ CLIPPING WINDOW HARD CODED FOR 23 MM
  128       \ OUTER BORDER     \ X-CENTER OF CIRCLE
  ANODE-OFFSET MM-PIX F* F>S -1 *  \ Y-CENTER
  RC-OUTER F@ MM-PIX F* F>S DUP \ X-RADIUS AND Y-RADIUS
  0 255 0 255   ARC   \ CLIPPING WINDOW
XOR-OFF
; \ CLIP WINDOWS ARE HARD-CODED FOR DEFAULT VALS
\                                                11:56 01-16-91
DECIMAL
: DISP-IMAGE32 ( --- ) \ DISPLAY 256X256 IMAGE
  DRAW-CIRCLE-BORDER MCA-SCALE-DISP \ DRAW-ANNULUS-BORDERS
  256 0 DO                  \ 256 ROWS
    I 1024 * XBASE !
    256 0 DO                \ 256 PIXELS PER ROW
      IMG-BASE
      XBASE @ I 4* + >PTR @L   \ COMPUTE ADDR AND GET PIXEL
      MCA-SCALE @ SHIFT 15 AND DUP 0<> IF
         FOREGROUND
         J 256 I -  !PEL      \ PLOT POINT IF HIT
      ELSE DROP THEN          \ THE IMG IS INVERTED INTERNALLY
    LOOP                      \ THEREFORE YPLOT=256-YIN
  LOOP
  DRAW-CIRCLE-BORDER ;
\                                                14:37 01-21-91
: CCP-MENU ( --- ) \ DISPLAYS CCP MENU IN CORNER
15 FOREGROUND
62 15 GOTOXY ."  E Delete file"
62 16 GOTOXY ."  L CCP Load   "
62 17 GOTOXY ."  S CCP Save   "
62 18 GOTOXY ."  J MCA Load   "
62 19 GOTOXY ."  K MCA Save   "
62 20 GOTOXY ."  M Mask       "
62 21 GOTOXY ."  I Image scale"
62 22 GOTOXY ."  A Accumulate "
62 23 GOTOXY ."  D Display    "
62 24 GOTOXY ."  T Acc time   "
62 25 GOTOXY ."  R Accum w/ras"
62 26 GOTOXY ."  Z Exit CCP   "
;
\                                                14:36 01-21-91
: CCP-VALS ( --- ) \ DISPLAYS CCP VALS IN CORNER
  75 21 GOTOXY MCA-SCALE @ NEGATE 5 .R          \ SCALE VAL
  75 24 GOTOXY ACCUM-TIME @ 5 .R                \ ACCUM-TIME
;
: DISPLAY RMCLEAR IMG-CLEAR DISP-IMAGE32 CCP-MENU ;










\                                                17:18 12-06-90
: RASTER-ACCUM
  CLEAR-CCP
   0    SET-ACCUM-TIME
  FALSE DESTRUCT ! \ WAS TRUE
  RASTER-ON @ RASTER-STATUS ! TRUE RASTER-ON !
  START-ACCUM
  NRASTERS @ 0 DO
     RASTER
  LOOP
  STOP-ACCUM
  FALSE  RASTER-ON !
  GET-CCP
  COLOR @ 1- FOREGROUND
  62 29 GOTOXY ." FINISHED...   "
;
\                                                23:41 12-03-90
: GET-ACCUM-TIME
  62 29 GOTOXY ." TIME(MS)? " #IN ACCUM-TIME !
  CCP-VALS
;
: DISP-IMG-COUNTS
  RASTER-ACCUM
  IMG-COUNTS
  62 28 GOTOXY ." COUNTS = " .
;






\                                                18:01 10-09-90
: 32-16 ( --- ) \ CONVERTS IMAGE TO 16 BIT AND STORES IN ARRAY
  262144 0 DO
    IMG-BASE I >PTR @L
    I/O-BASE I 2/ >PTR W!L
  4 +LOOP
;
: 16-32 ( --- ) \ CONVERTS IMAGE TO 32 BIT AND STORES IN ARRAY
  262144 0 DO
    I/O-BASE I 2/ >PTR W@L
    IMG-BASE I >PTR !L
  4 +LOOP
;



\ LOAD AND SAVE CCP IMAGES                       13:41 12-19-90
: CCP-SETUP
  " .CCP" EXTEN 5 CMOVE     \ USE .ANO FOR NEW FILES
  " *.CCP" THCB NAME>HCB    \ USE *.ANO TO SEARCH
  FHCB EQU F-TEMP             \ PLACE AHCB VAL IN TEMP
;
: READ-CCP   ( --- )       \ READS BLOCK FROM DISK
  FHCB I/O-BASE 131072     \ FOR FREADL
  FREADL DROP              \ READ IMAGE FROM DISK
  16-32                    \ CONVERTS TO 32 BIT ARRAY
;
: WRITE-CCP   ( --- )       \ WRITES BLOCK TO DISK
  32-16                     \ CONVERTS TO 16 BIT ARRAY
  FHCB I/O-BASE 131072      \ FOR FWRITEL
  FWRITEL DROP              \ WRITE LINE TO DISK
;
\ LOAD AND SAVE BY SRW 3/28/90                   17:20 12-10-90
: LD-CCP ( --- )
  CCP-SETUP                     \ SETUP EXTENSION TO USE
  PRINTNAMES DUP 0=
  IF
  17 1 GOTOXY ." NO DATA FILES!" 7 EMIT L 30000 0 DO LOOP DROP
  ELSE
    GETNUM                    \ GET NUM <= # OF FILES
    DUP 0= IF DROP LCLEAR EXIT ELSE \ IF <CR> THEN EXIT
      0 OPENFILE              \ ELSE OPEN FILE FOR READ
      READ-CCP                  \ PRINT CASE TITLES
      FHCB FCLOSE DROP   \ CLOSE FILE
    THEN
  THEN
  LCLEAR    ;

\ LOAD AND SAVE BY SRW                           06:22 10-25-90
: SV-CCP
  CCP-SETUP                \ SETUP CORRECT EXTENSIONS
  NEWFILE                  \ IF NONE DROP #, GET NEW & ADD .ANO
    0= IF 1 21 GOTOXY 50 SPACES EXIT ELSE
  WRITE-CCP
  FHCB FCLOSE DROP
  1 21 GOTOXY 50 SPACES
  THEN
;






\                                                15:09 12-19-90
: WRITE-MCA-HEADER
  FHCB HEADER1        10 FWRITE DROP
  FHCB ACCUM-TIME      4 FWRITE DROP
  FHCB HEADER2         8 FWRITE DROP
  1 29 GOTOXY 7 EMIT ." IMAGE TITLE(39 CHARS MAX): "
  MCA-STRING 39 GETSTRING
  1 29 GOTOXY 60 SPACES
  561 81 DO 32 MCA-STRING I + C! LOOP
  FHCB MCA-STRING 1+ 560 FWRITE DROP
  CLEAR-STRING
  FHCB HEADER3        32 FWRITE DROP
  FHCB HEADER2         8 FWRITE DROP
  FHCB MCA-STRING    126 FWRITE DROP
;

\                                                14:10 01-16-91
: READ-MCA-HEADER
  FHCB 748. 0 FSEEK 2DROP
;
: MCA-CCP-SWAP ( --- ) \ SWAPS X,Y & Y,X TO MAKE IMG MCA
  262148 2/ 0 DO       \ COMPATIBLE FOR SAVE AND LOAD
    IMG-BASE I >PTR @L \ CALL TWICE TO RESTORE IMAGE
    IMG-BASE 262140 I - >PTR @L
    IMG-BASE I >PTR !L
    IMG-BASE 262140 I - >PTR !L
  4 +LOOP
;
\ THIS ROUTINE JUST STRIPS OFF THE HEADER AND READS IN THE
\ REMAINDER OF THE FILE AS A 32 BIT IMAGE.
\ THE ACTUAL STRUCTURE IS IN C:\MCASRC\FILE.H

\ LOAD AND SAVE MCA IMAGES                       16:56 12-20-90
: MCA-SETUP
  " .MCA" EXTEN 5 CMOVE     \ USE .MCA FOR NEW FILES
  " *.MCA" THCB NAME>HCB    \ USE *.MCA TO SEARCH
  FHCB EQU F-TEMP             \ PLACE AHCB VAL IN TEMP
;
: WRITE-MCA-IMG ( --- ) \ ORIGINAL 32 BIT SAVE
  WRITE-MCA-HEADER
  MCA-CCP-SWAP FHCB IMG-BASE 262144 MCA-CCP-SWAP
  FWRITEL DROP
;
: READ-MCA-IMG ( --- )    \ ORIGINAL 32 READ
  READ-MCA-HEADER
  FHCB IMG-BASE 262144 MCA-CCP-SWAP
  FREADL DROP
;
\ LOAD AND SAVE BY SRW 3/28/90                   15:14 12-20-90
: LD-MCA ( --- )
  MCA-SETUP                     \ SETUP EXTENSION TO USE
  PRINTNAMES DUP 0=
  IF
  17 1 GOTOXY ." NO DATA FILES!" 7 EMIT L 30000 0 DO LOOP DROP
  ELSE
    GETNUM                    \ GET NUM <= # OF FILES
    DUP 0= IF DROP LCLEAR EXIT ELSE \ IF <CR> THEN EXIT
      0 OPENFILE              \ ELSE OPEN FILE FOR READ
      READ-MCA-IMG              \ PRINT CASE TITLES
      FHCB FCLOSE DROP   \ CLOSE FILE
    THEN
  THEN
  LCLEAR    ;

\ LOAD AND SAVE BY SRW                           15:14 12-20-90
: SV-MCA
  MCA-SETUP                \ SETUP CORRECT EXTENSIONS
  NEWFILE                  \ IF NONE DROP #, GET NEW & ADD .ANO
    0= IF 1 21 GOTOXY 50 SPACES EXIT ELSE
  WRITE-MCA-IMG
  FHCB FCLOSE DROP
  1 21 GOTOXY 50 SPACES
  THEN
;






\                                                15:13 12-20-90
(
: CONVERT16
  CCP-SETUP
  ." ENTER FILENAME TO CONVERT: "
  FNAME 8 GETSTRING L FNAME EXTEN +EXT FHCB NAME>HCB
  FHCB 0 FOPEN READ-CCP-OLD FHCB FCLOSE
  FHCB 0 FMAKE WRITE-CCP FHCB FCLOSE
  CLRSTK
;
)
\ THIS ROUTINE CONVERTED 32BIT IMAGE FILES TO 16BIT FORMAT
\ READ-CCP-OLD IS THE SAME AS READ-MCA-IMAGE W/O
\ READ-MCA-HEADER


\                                                16:59 12-20-90

: GET-IMAGE ( --- ) \ FETCHES ACCUM-TIME FROM ACCUM-TIME @
  62 29 GOTOXY ." LOADING IMAGE "
  IMAGE
  62 29 GOTOXY ." FINISHED...   "
;
: SCALE-CONTROL
  15 FOREGROUND
  10 29 GOTOXY ." NUMBER BITS TO SHIFT(-1 FOR AUTO): " #IN
  DUP 0< IF DROP AUTO-SCALE ELSE
  NEGATE MCA-SCALE ! THEN
  10 29 GOTOXY 40 SPACES
  CCP-VALS
  DISPLAY
;
\                                                00:23 11-14-90
: R-ACCUM
  62 28 GOTOXY ." # OF RASTERS " #IN NRASTERS !
  NRASTERS @ 0= IF 1 NRASTERS ! THEN

  RASTER-ACCUM
;









\                                                17:08 12-26-90
: CCP-INPUT ( --- ) \ SETS WINDOW BOUNDARIES
  BEGIN BEGIN ?TERMINAL UNTIL KEY
    DUP 77 = IF DRAW-ANNULUS-BORDERS   THEN  \ 'M
    DUP 65 = IF GET-IMAGE DISPLAY      THEN  \ 'A
    DUP 68 = IF DISPLAY         THEN  \ 'D
    DUP 69 = IF DELFILE         THEN  \ 'E
    DUP 84 = IF GET-ACCUM-TIME  THEN  \ 'T
    DUP 76 = IF LD-CCP DISPLAY  THEN \ 'L
    DUP 83 = IF SV-CCP          THEN  \ 'S
    DUP 74 = IF LD-MCA DISPLAY  THEN \  'J
    DUP 75 = IF SV-MCA          THEN \  'K
    DUP 82 = IF R-ACCUM DISPLAY   THEN \ 'R
    DUP 73 = IF SCALE-CONTROL   THEN \ 'I
    DUP 90 = IF DROP EXIT THEN \ 'Z
  DROP AGAIN ;
\                                                14:36 01-21-91
: CCP-CONTROL
  RMCLEAR
  CCP-VALS
  CCP-MENU CCP-VALS
  CCP-INPUT
  CLRSTK
  RMCLEAR MENU TRODE-UPDATE-ALL
;







