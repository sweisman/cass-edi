\ Electron Drift Instrument                      14:11 01-16-91
(
Source Files
WELCOME TO EDI CASS TEAM

DRIVERS FOR HIGH VOLTAGE SYSTEM FOR EDI OPTICS

BY   JOE RITTER AND SLOBODAN BEROS AND SCOTT WEISMAN


HISTOG26.SCR




 )
\                                                10:43 01-18-91
\ THIS FILE HAS ROUTINES TO PERFORM HISTOGRAMS ON DETECTOR
\ DATA.  DATA IS COLLECTED FROM THE CARLSON CHANNEL PLATE
\ SYSTEM ONTO A 256X256 IMAGE (SEE CCPCTL).  FOUR ARCS ARE
\ PLACED TRHOUGH THE IMAGE TO GET THREE ANNULI: INNER, CENTER,
\ AND OUTER.  THE CENTER ONE IS BROKEN UP INTO 72 QUATER-
\ SECTOR BINS, AND THEN HISTOGRAM FINDS THE NUMBER OF COUNTS
\ PER BIN.  FOR INNER AND OUTER, ONLY THE TOTAL COUNTS PER
\ ANNULUS IS TAKEN AND REPORTED.  THE QUARTER SECTOR BINS
\ ARE THEN COMBINED INTO 1,2,4,8 SECTORS (1 SECTOR=4 BINS)
\ AND THE SECTOR COUNTS ARE THEN REPORTED.  THE SECTORS ARE
\ TAKEN FROM ARE CALCULTED FROM A CENTER BIN, WHICH IS DEFAULT
\ IN THE CENTER OF THE 72 BINS, BUT CAN BE PLACED ANYWHERE
\ (EG AT THE PEAK COUNT BIN)
\ THE HISTOGRAM ARE OPTIMIZED FOR FAST EXECUTION AND TAKE UP
\ A LOT OF MEMORY (SEVERAL HUNDRED KBYTES) (CON'T -->)
\                                                10:55 01-18-91
\ UPON STARTUP OR CHANGE OF ANNULI VALS, A ROUTINE RUNS THROUGH
\ AND FINDS OUT WHICH MEMORY LOCATION CORRESPOND TO WHICH BINS
\ IN AN IMAGE BY GOING THROUGH AND FILLING EACH BIN WITH ITS
\ RESPECTIVE NUMBER (0 THRU 71).  THEN A ROUTINE GOES THROUGH
\ AND SEARCHES THE IMAGE FOR VALS 0-71, AND EACH TIME IT
\ ENCOUNTERS SUCH, IT TAKES THE LOCATION OF THAT VALUE AND
\ PLACES IT IN A BIN LOCATION ARRAY.  THE ACTUAL HISTOGRAM
\ THEN SEQUENTIALLY GOES THROUGH THIS ARRAY AND SUMS THE VALS
\ IN THE MEMORY LOCATIONS.  THIS SPEEDS UP CALCULATION BY
\ AVOIDING TRIG CALCS FOR THE ANNULUS AT RUN TIME.  ANYTIME
\ THE ANNULI RADII OR BIN WIDTH IS CHANGED, A RECALC OF
\ ADDRESSES MUST BE DONE.  LIMITATIONS INCLUDE NO MORE THAN
\ 256 LOCATIONS PER BIN, AND NO ERROR CHECKING.  THIS LIMIT
\ WILL NOT NORMALLY BE REACHED.

\ P>R                                            16:48 10-05-90
( polar to rectangular coordinate conversion )
( angle radius --- y x  )
: P>R           FDUP F0= IF FSWAP FDROP FDUP ELSE
                FSWAP FOVER FOVER FSIN F* FSWAP FROT
                FSWAP FCOS F* THEN
;


( NOTE: FOR OUR PURPOSES X AND Y ARE REVERSED, SINCE A ZERO
        ANGLE RUNS ALONG THE Y AXIS AND NOT X, AS IS
        NORMALLY THE CASE )




\  NEWEST                                        17:06 10-23-90
: ANU-IMG@ ( THETA R --- VAL )      \ DESTRUCTIVE FETCH
  P>R ANODE-OFFSET F- MM-PIX F* \ ADD 128 PIXEL OFFSET (Y
  FSWAP MM-PIX F* 128E F+       \ SUBTRACT ANODE OFFSET (X Y)
  F>S >R F>S
  255 - NEGATE
             4* R> 1024 * +     \ CONVERT TO INTEGER AND OFFSET
  IMG-BASE ROT >PTR 2DUP        \ AND ADD TO POINTER AND DUP
  DUP 262140 >= IF 2DROP 2DROP 0 EXIT THEN \ OUT OF RANGE
  DUP 0< IF 2DROP 2DROP 0 EXIT THEN
  @L >R 0 -ROT !L R>            \ FETCH VAL AND STORE 0
;




\  NEWEST                                        19:52 11-06-90
: ANU-IMG! ( VAL THETA R --- )      \ DESTRUCTIVE FETCH
  P>R ANODE-OFFSET F- MM-PIX F* \ ADD 128 PIXEL OFFSET (Y
  FSWAP MM-PIX F* 128E F+       \ SUBTRACT ANODE OFFSET (X Y)
  F>S >R F>S
  255 - NEGATE
             4* R> 1024 * +     \ CONVERT TO INTEGER AND OFFSET
  IMG-BASE ROT >PTR             \ AND ADD TO POINTER
  DUP 262140 >= IF DROP 2DROP EXIT THEN \ OUT OF RANGE
  DUP 0< IF DROP 2DROP EXIT THEN
  !L            \ STORE VAL
;




\                                                03:49 01-18-91
: Q-SEC@ ( I --- N ) ( 36 - ) 4* Q-SECTOR[] + @ ;
: Q-SEC! ( N I --- ) ( 36 - ) 4* Q-SECTOR[] + ! ;

: CALC-INCREMENT ( R --- INC ) \ CALCS ANGLE INCREMENT FOR R
  PIX-MM FSWAP F/ FATAN FABS 1.5E0 F/ \ USE PYTHAGOREAN THRM.
;
: DISP-INDEX
   10 5 GOTOXY ." R THETA "  10 10 GOTOXY    I  10000 / .
                   30 10 GOTOXY    J  10000 / .
                   10 20 GOTOXY  F>S .
                   30 20 GOTOXY  F>S .
;
: PRINT-HISTOGRAM
  72 0 DO I Q-SEC@ . LOOP
;
\                                                03:21 01-18-91
: ZERO-BINS
   72 0 DO 0 I Q-SEC! LOOP
;
: ZERO-BIN-ADDR
  73728 0 DO 0 BIN-ADDR[] I >PTR !L 4 +LOOP
;
: BIN-ADDR! ( ADDR BIN-POS BIN# --- )
  1024 * SWAP 4* +
  BIN-ADDR[] ROT >PTR !L
;
: BIN-ADDR@ ( BIN-POS BIN# --- ADDR )
  1024 * SWAP 4* + BIN-ADDR[] ROT >PTR @L
;


\   WORKS SRW 9/27                               19:26 10-24-90
: BIN-COUNT3 ( ROUT RIN THETA+ THETA- --- COUNT )
  THETA- F! THETA+ F! RINNER F! FDUP ROUTER F!
  CALC-INCREMENT  THETA-FINC F!
  0 BIN-COUNT-VAL !                 \ INITIAL COUNT OF 0
  THETA- F@          \ THETA ON STK
  BEGIN  \ THETA LOOP ( THETA- TO THETA+ )
    RINNER F@       \ RADIUS ON STK
    BEGIN \ RADIUS LOOP ( RINNER TO ROUTER )
      FOVER FOVER ANU-IMG@ BIN-COUNT-VAL +! \ (T R T R ) ADD CNT
      R-FINC F@ F+ FDUP ROUTER F@ F> \ R=R+R-INC (ON STACK)
    UNTIL FDROP \ COMPARE R & IF OVER DROP, LV THETA
    THETA-FINC F@ F+ FDUP THETA+ F@ F> \ ADD THETA-INC AND COMP
  UNTIL
  FDROP BIN-COUNT-VAL @ ;

\                                                03:52 01-18-91
\ BIN-COUNT TAKES 4 VALS DEFINING A REGION OF AN ANNULUS
\ AND FINDS ALL THE HITS THEREIN.  IT HAS AN OUTER LOOP WHICH
\ IS OVER THE ANGLE AND AN INNER LOOP OVER THE RADIUS.  THE
\ INCREMENT FOR THE RADIUS IS CONSTANT, BUT CHANGES FOR THE
\ ANGLE AS A FUNCTION OF CHANGING RADIUS.  THE ROUTINE
\ CALC-INCREMENT CALCS THE SMALLEST INCREMENT ENCOUNTERED,WHICH
\ IS AT THE OUTER RADIUS, AND USES THAT THROUGHOUT, SINCE NO
\ HARM IS DONE, AND FIND THE EXACT INCREMENT FOR EACH RADIUS
\ TAKES MORE TIME.  IN ORDER TO ASSURE THAT NUMBERS ARE NOT
\ COUNTED MORE THAN ONCE, DUE TO TOO SMALL INCREMENT, THE READ
\ IS DESTRUCTIVE, REPLACING THE VALUE WITH 0.




\                                                03:52 01-18-91
\ HISTOGRAM IS THE SHELL FOR BIN-COUNT. IT TAKES RIN, ROUT
\ WHICH REMAIN CONST, THETA-RANGE WHICH IS THE +/- RANGE
\ ABOUT THE 0-ANGLE, AND THE BIN-WIDTH. IT THEN INCREMENTS
\ OVER THETA, PASSING THE VALUES FOR EACH REGION TO BIN-COUNT







\ THESE ROUTINES HAVE BEEN SUPERCEDED BY THE FAST-HISTOGRAM
\ SETUP AND SUPPORT ROUTINES.


\                                                03:28 01-18-91
: HISTOGRAM ( ROUT RIN THETA-RANGE BIN-WIDTH --- )
  BIN-WIDTH F! FDUP HTHETA-MAX F!
  FNEGATE FDUP HTHETA-RANGE F! LEFT-THETA F!
  ZERO-BINS 0 BIN ! \ INITIALIZE AND CURRENT BIN IS 0
  62 29 GOTOXY ." HISTOGRAM"
  BEGIN    \ RIN,ROUT ARE CONST, CALC ANGLES FOR BIN
    FOVER FOVER \ SAVE ROUT AND RIN FOR CONTINUOUS USE
    LEFT-THETA F@ FDUP BIN-WIDTH F@ F+ FSWAP \ RIGHT=LEFT+WIDTH
    BIN-COUNT3 BIN @ Q-SEC! \ DO BIN COUNT AND SAVE \ GET COUNTS
    1 BIN +!        \ NEXT BIN NUMBER           \ IN REGION
    LEFT-THETA F@ BIN-WIDTH F@ F+ LEFT-THETA F! \ LEFT_NEW=
     LEFT-THETA F@   HTHETA-MAX F@ F>=          \ LEFT+WIDTH
  UNTIL
  FDROP FDROP ;

\   WORKS SRW 9/27                               04:01 01-18-91
: BIN-GEN ( ROUT RIN THETA+ THETA- --- )
  THETA- F! THETA+ F! RINNER F! FDUP ROUTER F!
  CALC-INCREMENT  THETA-FINC F!
  BEGIN  \ THETA LOOP ( THETA+ TO THETA- )
    RINNER F@ RLOOP F!
    BEGIN \ RADIUS LOOP ( RINNER TO ROUTER )
      BIN @ THETA+ F@ RLOOP F@ ANU-IMG! ( STORE BIN# )
      RLOOP F@ R-FINC F@ F+ FDUP RLOOP F!
      ROUTER F@ F> \ R=R+R-INC (ON STACK)
    UNTIL \ COMPARE R & IF > ROUTER EXIT LOOP
    THETA+ F@ THETA-FINC F@ F- FDUP THETA+ F!
    THETA- F@ F< \ ADD THETA-INC AND COMP
  UNTIL \ IF THETA+<THETA- THEN EXIT
;

\                                                04:03 01-18-91
\ BIN-GEN AND HISTO-GEN ARE ANALOGOUS TO BIN-COUNT AND
\ HISTOGRAM WORDS.  BIN-GEN TAKES A REGION AND FILLS IT WITH
\ THE CURRENT BIN# USING A SIMILAR, BUT SLIGHTLY SIMPLIFIED,
\ BIN-COUNT ALGORITHM. BIN-GEN LOOPS BACKWARDS FOR THE SAME
\ REASON HISTO-GEN DOES, AND THUS MEANS NOTHING.
\ HISTOGEN FIRST SETS ALL PIXELS TO -1, SINCE THE SMALLEST BIN
\ NUMBER IS 0, AND SIMPLIFIES SEARCHING FOR ALL BIN LOCATIONS.
\ IT LOOPS BACKWARDS BECAUSE OF INITIAL WORRIES ABOUT BUGS IN
\ THE SOFTWARE, AND LOOPS DOWN TO -1 INSTEAD OF 0 TO MAKE SURE
\ THAT ALL BINS ARE THE SAME SIZE, SINCE THE EDGES OF THE BINS
\ OVERLAP, ONE END BIN WOULD BE LARGER OTHERWISE.
\ ADDR-GEN SEARCHES FOR BIN#'S IN IMAGE, GETS THE BIN# AND
\ ADDR OF LOCATION, THEN STORES THIS IN THE NEXT AVAILABLE LOC.
\ IN THE ADDR ARRAY.  Q-SEC[] IS USED TO STORE NEXT INDEX FOR
\ EACH BIN, BEING INCREMENTED AFTER STORING A NEW LOCATION.
\                                                03:22 01-18-91
: HISTO-GEN ( ROUT RIN THETA-RANGE BIN-WIDTH --- )
  FILL-IMG
  BIN-WIDTH F! FDUP HTHETA-MAX F!
  FNEGATE LEFT-THETA F!
  71 BIN !
  BEGIN    \ BEGIN UNTIL LOOP
    FOVER FOVER \ SAVE ROUT AND RIN FOR CONTINUOUS USE
    HTHETA-MAX F@ FDUP BIN-WIDTH F@ F- BIN-GEN
    -1 BIN +!        \ NEXT BIN NUMBER
    HTHETA-MAX F@ BIN-WIDTH F@ F- HTHETA-MAX F!
    BIN @ -1 <
  UNTIL
  FDROP FDROP ;


\                                                04:07 01-18-91
: ADDR-GEN
  ZERO-BINS ZERO-BIN-ADDR
  262144 0 DO  \ LOOP OVER EACH LOCATION IN IMAGE ARRAY
    IMG-BASE I >PTR @L  ( BIN# )
    DUP 0 >= OVER 72 < AND IF \ IF BIN# THEN
      DUP Q-SEC@ ( BIN# BIN-POS ) \ GET INDEX INTO ADDR-ARRAY
      1+ SWAP 2DUP Q-SEC! SWAP 1- \ SAVE NEW INDEX| BIN# BIN-POS
      I SWAP ROT BIN-ADDR! \  ADDR BIN-POS BIN#
    ELSE    \ SAVE ADDR FOR BIN# IN INDEX BIN-POS
      DROP \ IF NOT BIN# THEN DROP
    THEN
  4 +LOOP \ INCREMENT IS 4 BECAUSE 32 BIT WORDS ARE USED
;


\                                                14:27 01-21-91
: FAST-HISTOGRAM
  ZERO-BINS
  72 0 DO               ( BIN# )
    256 0 DO            ( BIN-POS )
      I J BIN-ADDR@     ( BIN-ADDR )
      DUP 0= IF DROP LEAVE
      ELSE
        IMG-BASE ROT >PTR @L       \ NOISE OR SOME OTHER SOURCE
        DUP 65535 = IF DROP 0 THEN \ CAUSES TWO SPURIOUS VALS.
        DUP 0<      IF DROP 0 THEN \ TO COME UP-NEG. AND 65535.
        J Q-SEC@ + J Q-SEC!        \ THESE TEST FOR THOSE VALS
      THEN                         \ AND REPLACE W/0 IF NEC.
    LOOP
  LOOP
;
\                                                06:15 11-06-90
VARIABLE 1ANO VARIABLE 2ANO VARIABLE 4ANO VARIABLE 8ANO
: SUM-ANODES
  ARC-CENTER[] Q-SECTOR[] 288 CMOVE
  0 0 0 0 1ANO ! 2ANO ! 4ANO ! 8ANO !
  72 0 DO
    I ARC-CENTER @ 2- > I ARC-CENTER @ 3 + < AND IF
      I Q-SEC@ 1ANO +! THEN
    I ARC-CENTER @ 4- > I ARC-CENTER @ 5 + < AND IF
      I Q-SEC@ 2ANO +! THEN
    I ARC-CENTER @ 8 - > I ARC-CENTER @ 9 + < AND IF
      I Q-SEC@ 4ANO +! THEN
    I ARC-CENTER @ 16 - > I ARC-CENTER @ 17 + < AND IF
      I Q-SEC@ 8ANO +! THEN
  LOOP
;
\                                                01:32 10-28-90
: DISP-ANODES
   4 FOREGROUND 40 19 GOTOXY ." 1 ANODE : " 1ANO @ .
  14 FOREGROUND 40 20 GOTOXY ." 2 ANODES: " 2ANO @ .
  13 FOREGROUND 40 21 GOTOXY ." 4 ANODES: " 4ANO @ .
   6 FOREGROUND 40 22 GOTOXY ." 8 ANODES: " 8ANO @ .
  15 FOREGROUND
;








\                                                18:28 11-06-90
: GET-MAX-VAL ( --- N ) \ RETURNS THE HIGHEST COUNT BIN
    0 Q-SEC@
  72  1  DO
    I Q-SEC@ MAX
  LOOP ;
: GET-MAX-BIN ( --- N ) \ RETURNS THE BIN# WITH HIGHEST COUNTS
  GET-MAX-VAL
  72 0 DO
    DUP I Q-SEC@ = IF DROP I LEAVE THEN
  LOOP
;




\                                                18:36 11-06-90

: FAST-GEN  62 29 GOTOXY ." FAST-GEN"
  62 29 GOTOXY ." CTR-GEN " CTR-ADDR[] PTR BIN-ADDR[]
  RC-OUTER F@ RC-INNER F@ THETA-RANGE F@ BIN-WIDTH F@ HISTO-GEN
  ADDR-GEN
  62 29 GOTOXY ." IN-GEN  " IN-ADDR[] PTR BIN-ADDR[]
  RC-INNER F@ RI-INNER F@ THETA-RANGE F@ BIN-WIDTH F@ HISTO-GEN
  ADDR-GEN
  62 29 GOTOXY ." OUT-GEN " OUT-ADDR[] PTR BIN-ADDR[]
  RO-OUTER F@ RC-OUTER F@ THETA-RANGE F@ BIN-WIDTH F@ HISTO-GEN
  ADDR-GEN
  FALSE NEW-ANU-VAL ! 62 29 GOTOXY ." DONE... "
;


\                                                14:03 11-12-90
: GET-TOTAL-COUNTS ( --- N ) \ RETURNS SUM OF COUNTS IN ALL BINS
  0 SUM-COUNTS !
  0 INNER-COUNTS !
  0 CENTER-COUNTS !
  0 OUTER-COUNTS !
  72  0  DO
    ARC-CENTER[] I 4* + @ DUP CENTER-COUNTS +!
    ALL-HISTOS @ IF
      ARC-INNER[] I 4* + @ DUP INNER-COUNTS +!
      ARC-OUTER[] I 4* + @ DUP OUTER-COUNTS +!
    ELSE 0 0 THEN
    + + SUM-COUNTS +!
  LOOP
  SUM-COUNTS @ \ LEAVE SUM-COUNTS ON STACK
  DUP TOTAL-COUNTS ! ;
\                                                14:03 11-12-90

: DISP-HIST-SCALE
  GET-TOTAL-COUNTS
 15 FOREGROUND 40 24 GOTOXY PEAK-COUNTS @ ." PEAK COUNTS " .
 12 FOREGROUND 40 26 GOTOXY ." CENTER COUNTS " CENTER-COUNTS @ .
 ALL-HISTOS @ IF
   10 FOREGROUND 40 25 GOTOXY ." INNER COUNTS " INNER-COUNTS @ .
   11 FOREGROUND 40 27 GOTOXY ." OUTER COUNTS " OUTER-COUNTS @ .
 THEN
 15 FOREGROUND 40 28 GOTOXY ." TOTAL COUNTS " .
  0 450 216 450 LINE
  ARC-CENTER @ 3 * 265 OVER 455 LINE  \ CENTER LINE
;


\                                                04:58 10-25-90
: ANODE-COLOR ( SECTOR-NUMBER --- )
  DUP ARC-CENTER @ <= IF
    DUP ARC-CENTER @ 2-  > IF  4 FOREGROUND THEN
    DUP ARC-CENTER @ 1-  < IF 14 FOREGROUND THEN
    DUP ARC-CENTER @ 3 - < IF 13 FOREGROUND THEN
    DUP ARC-CENTER @ 7 - < IF  6 FOREGROUND THEN
    DUP ARC-CENTER @ 15 - < IF 12 FOREGROUND THEN
  ELSE
    DUP ARC-CENTER @ 3 + < IF  4 FOREGROUND THEN
    DUP ARC-CENTER @ 2+  > IF 14 FOREGROUND THEN
    DUP ARC-CENTER @ 4+  > IF 13 FOREGROUND THEN
    DUP ARC-CENTER @ 8 + > IF  6 FOREGROUND THEN
    DUP ARC-CENTER @ 16 + > IF 12 FOREGROUND THEN
  THEN
  DROP ;
\                                                15:44 11-13-90
: DISP-HISTOGRAM \ NEWEST-DOES 3 HISTOGS ( ADDR X-OFF Y-OFF---)
  62 29 GOTOXY ." DISP-HISTOGRAM"
  Y-OFFSET ! X-OFFSET !    \ STORE OFFSETS
  DUP ARC-CENTER[] = IF TRUE CENTER? ! ELSE FALSE CENTER? ! THEN
  Q-SECTOR[] 288 CMOVE      \ MOVE ARRAY
  PEAK-COUNTS @ 1+ S>F 180E F/ HIST-SCALE F!
  72 0 DO
    CENTER? @ IF I ANODE-COLOR THEN
\   I 3 * X-OFFSET @ + 450 Y-OFFSET @ -
    I 3 * X-OFFSET @ + 450 Y-OFFSET @ -
    I Q-SEC@ S>F HIST-SCALE F@ F/ F>S -
    I 0<> IF  2DUP  XLAST @ YLAST @ LINE THEN
    ( 2DUP ) YLAST ! XLAST ! \ LINE
  LOOP
;
\                                                14:03 11-12-90
: DISP-ALL-HISTOGS
  HISTOCLEAR 62 29 GOTOXY ." DISP ALL"
  ARC-CENTER[] Q-SECTOR[] 288 CMOVE GET-MAX-VAL
  ALL-HISTOS @ IF ARC-INNER[] Q-SECTOR[] 288 CMOVE GET-MAX-VAL
              ARC-OUTER[] Q-SECTOR[] 288 CMOVE GET-MAX-VAL
  ELSE 0 0 THEN
  MAX MAX DUP PEAK-COUNTS !
  DISP-HIST-SCALE   SUM-ANODES DISP-ANODES
  0= IF EXIT ELSE
  10 FOREGROUND ARC-CENTER[] 0 0 DISP-HISTOGRAM
  ALL-HISTOS @ IF 11 FOREGROUND ARC-OUTER[] 0 0 DISP-HISTOGRAM
              10 FOREGROUND ARC-INNER[] 0 0 DISP-HISTOGRAM
  THEN
  15 FOREGROUND
  THEN  ;
\                                                18:30 11-06-90
: CENTER-HISTO
  CTR-ADDR[] PTR BIN-ADDR[] FAST-HISTOGRAM
  Q-SECTOR[] ARC-CENTER[] 288 CMOVE
;
: INNER-HISTO
  IN-ADDR[] PTR BIN-ADDR[] FAST-HISTOGRAM
  Q-SECTOR[] ARC-INNER[] 288 CMOVE
;
: OUTER-HISTO
  OUT-ADDR[] PTR BIN-ADDR[] FAST-HISTOGRAM
  Q-SECTOR[] ARC-OUTER[] 288 CMOVE
;



\                                                14:03 11-12-90
: DO-HISTOGRAM
  NEW-ANU-VAL @ IF
    10 29 GOTOXY 7 EMIT ." PLEASE GENERATE NEW ADDRESS TABLE!"
    200000 0 DO LOOP 10 29 GOTOXY 50 SPACES
    EXIT
  ELSE
    CENTER-HISTO ALL-HISTOS @ IF OUTER-HISTO INNER-HISTO THEN
    DISP-ALL-HISTOGS
  THEN
;





\                                                17:21 12-05-90
: ANU-INIT
  29.0E0  RC-OUTER F!         \ OUTER  MCP RADIUS
  23.0E0  RC-INNER F!         \ INNER MCP RADIUS IN MILLIMETERS
  18.5E0  RI-INNER F!
  33.5E0  RO-OUTER F!
  25.312E0  THETA-RANGE F!     \ +/- THETA RANGE FOR HISTOGRAM
  .703125E0 BIN-WIDTH F!    \ BINSIZE DEGREES (360/128)/4
;
: GET-ANU-FVAL
  10 29 GOTOXY ." ENTER VALUE: " F#IN
  10 29 GOTOXY 30 SPACES
  TRUE NEW-ANU-VAL !
;


\                                                14:03 11-12-90
: ANU-VALS ( --- ) \ DISPLAYS CCP VALS IN CORNER
  76 18 GOTOXY ALL-HISTOS @ IF ." YES" ELSE ."  NO" THEN
  75 19 GOTOXY ARC-CENTER @ 5 .R
  74 20 GOTOXY RI-INNER F@ 5 F.R
  74 21 GOTOXY RC-INNER F@ 5 F.R                   \ DISPLAY DX
  74 22 GOTOXY RC-OUTER F@ 5 F.R
  74 23 GOTOXY RO-OUTER F@ 5 F.R
  74 24 GOTOXY BIN-WIDTH F@ 5 F.R
  74 25 GOTOXY THETA-RANGE F@ 5 F.R
;





\                                                12:43 01-04-91
: SET-ARC-CENTER
  10 29 GOTOXY ." ENTER VALUE(-1 FOR PEAK): " #IN
  DUP -1 = IF DROP ARC-CENTER[] Q-SECTOR[] 288 CMOVE
             GET-MAX-BIN THEN
  10 29 GOTOXY 30 SPACES
  ARC-CENTER ! ANU-VALS DISP-ALL-HISTOGS ;









\                                                18:48 10-25-90
: SET-BIN-WIDTH
  GET-ANU-FVAL BIN-WIDTH F! ANU-VALS ;
: SET-RI-INNER
  GET-ANU-FVAL RI-INNER F! ANU-VALS ;
: SET-RC-INNER
  GET-ANU-FVAL RC-INNER F! ANU-VALS ;
: SET-RC-OUTER
  GET-ANU-FVAL RC-OUTER F! ANU-VALS ;
: SET-RO-OUTER
  GET-ANU-FVAL RO-OUTER F! ANU-VALS ;
: SET-THETA-RANGE
  GET-ANU-FVAL THETA-RANGE F! ANU-VALS ;



\                                                03:06 10-26-90
: ANU-MENU ( --- ) \ DISPLAYS CCP MENU IN CORNER
62 17 GOTOXY ." G Gen table"
62 18 GOTOXY ." X In/Out Histos"
62 19 GOTOXY ." C Center bin "
62 20 GOTOXY ." U RI-INNER   "
62 21 GOTOXY ." I RC-INNER   "
62 22 GOTOXY ." O RC-OUTER   "
62 23 GOTOXY ." P RO-OUTER   "
62 24 GOTOXY ." B Bin width  "
62 25 GOTOXY ." T Theta range"
62 26 GOTOXY ." H Histogram  "
62 27 GOTOXY ." D Disp histo"
62 28 GOTOXY ." Z Exit Histo "
;

\                                                14:04 11-12-90
: ANU-INPUT ( --- ) \ SETS WINDOW BOUNDARIES
  BEGIN BEGIN ?TERMINAL UNTIL KEY
    DUP 71 = IF FAST-GEN THEN \ 'G
    DUP 88 = IF ALL-HISTOS @ NOT ALL-HISTOS ! ANU-VALS THEN \ 'X
    DUP 66 = IF SET-BIN-WIDTH   THEN  \ 'B
    DUP 67 = IF SET-ARC-CENTER THEN     \ 'C
    DUP 85 = IF SET-RI-INNER      THEN  \ 'U
    DUP 73 = IF SET-RC-INNER      THEN  \ 'I
    DUP 79 = IF SET-RC-OUTER      THEN  \ 'O
    DUP 80 = IF SET-RO-OUTER      THEN  \ 'P
    DUP 84 = IF SET-THETA-RANGE THEN  \ 'T
    DUP 68 = IF DISP-ALL-HISTOGS THEN \ 'D
    DUP 72 = IF DO-HISTOGRAM THEN \ 'H
    DUP 90 = IF DROP EXIT THEN   CLRSTK  \ 'Z
  AGAIN ;
\                                                23:27 10-25-90
: ANU-CONTROL
  RMCLEAR
  ANU-MENU
  ANU-VALS
  ANU-INPUT
  FALSE RASTER-ON !
  RMCLEAR MENU TRODE-UPDATE-ALL
;







